<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.dong.beta.dao.mapper.UsersMapper">
  <resultMap id="BaseResultMap" type="com.dong.beta.dao.domain.Users">
    <id column="userId" jdbcType="INTEGER" property="userid" />
    <result column="username" jdbcType="VARCHAR" property="username" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="jobNum" jdbcType="VARCHAR" property="jobnum" />
    <result column="department" jdbcType="VARCHAR" property="department" />
    <result column="team" jdbcType="VARCHAR" property="team" />
    <result column="role" jdbcType="VARCHAR" property="role" />
    <result column="product" jdbcType="VARCHAR" property="product" />
    <result column="createTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="loginTime" jdbcType="TIMESTAMP" property="logintime" />
    <result column="note1" jdbcType="VARCHAR" property="note1" />
    <result column="note2" jdbcType="VARCHAR" property="note2" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userId, username, password, name, jobNum, department, team, role, product, createTime, 
    loginTime, note1, note2
  </sql>
  <select id="selectByExample" parameterType="com.dong.beta.dao.domain.UsersCriteria" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from users
    where userId = #{userid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from users
    where userId = #{userid,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.dong.beta.dao.domain.UsersCriteria">
    delete from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.dong.beta.dao.domain.Users">
    insert into users (userId, username, password, 
      name, jobNum, department, 
      team, role, product, 
      createTime, loginTime, note1, 
      note2)
    values (#{userid,jdbcType=INTEGER}, #{username,jdbcType=VARCHAR}, #{password,jdbcType=VARCHAR}, 
      #{name,jdbcType=VARCHAR}, #{jobnum,jdbcType=VARCHAR}, #{department,jdbcType=VARCHAR}, 
      #{team,jdbcType=VARCHAR}, #{role,jdbcType=VARCHAR}, #{product,jdbcType=VARCHAR}, 
      #{createtime,jdbcType=TIMESTAMP}, #{logintime,jdbcType=TIMESTAMP}, #{note1,jdbcType=VARCHAR}, 
      #{note2,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.dong.beta.dao.domain.Users">
    insert into users
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        userId,
      </if>
      <if test="username != null">
        username,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="name != null">
        name,
      </if>
      <if test="jobnum != null">
        jobNum,
      </if>
      <if test="department != null">
        department,
      </if>
      <if test="team != null">
        team,
      </if>
      <if test="role != null">
        role,
      </if>
      <if test="product != null">
        product,
      </if>
      <if test="createtime != null">
        createTime,
      </if>
      <if test="logintime != null">
        loginTime,
      </if>
      <if test="note1 != null">
        note1,
      </if>
      <if test="note2 != null">
        note2,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userid != null">
        #{userid,jdbcType=INTEGER},
      </if>
      <if test="username != null">
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="jobnum != null">
        #{jobnum,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        #{department,jdbcType=VARCHAR},
      </if>
      <if test="team != null">
        #{team,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        #{role,jdbcType=VARCHAR},
      </if>
      <if test="product != null">
        #{product,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="logintime != null">
        #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="note1 != null">
        #{note1,jdbcType=VARCHAR},
      </if>
      <if test="note2 != null">
        #{note2,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dong.beta.dao.domain.UsersCriteria" resultType="java.lang.Long">
    select count(*) from users
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update users
    <set>
      <if test="record.userid != null">
        userId = #{record.userid,jdbcType=INTEGER},
      </if>
      <if test="record.username != null">
        username = #{record.username,jdbcType=VARCHAR},
      </if>
      <if test="record.password != null">
        password = #{record.password,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null">
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.jobnum != null">
        jobNum = #{record.jobnum,jdbcType=VARCHAR},
      </if>
      <if test="record.department != null">
        department = #{record.department,jdbcType=VARCHAR},
      </if>
      <if test="record.team != null">
        team = #{record.team,jdbcType=VARCHAR},
      </if>
      <if test="record.role != null">
        role = #{record.role,jdbcType=VARCHAR},
      </if>
      <if test="record.product != null">
        product = #{record.product,jdbcType=VARCHAR},
      </if>
      <if test="record.createtime != null">
        createTime = #{record.createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.logintime != null">
        loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.note1 != null">
        note1 = #{record.note1,jdbcType=VARCHAR},
      </if>
      <if test="record.note2 != null">
        note2 = #{record.note2,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update users
    set userId = #{record.userid,jdbcType=INTEGER},
      username = #{record.username,jdbcType=VARCHAR},
      password = #{record.password,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      jobNum = #{record.jobnum,jdbcType=VARCHAR},
      department = #{record.department,jdbcType=VARCHAR},
      team = #{record.team,jdbcType=VARCHAR},
      role = #{record.role,jdbcType=VARCHAR},
      product = #{record.product,jdbcType=VARCHAR},
      createTime = #{record.createtime,jdbcType=TIMESTAMP},
      loginTime = #{record.logintime,jdbcType=TIMESTAMP},
      note1 = #{record.note1,jdbcType=VARCHAR},
      note2 = #{record.note2,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.dong.beta.dao.domain.Users">
    update users
    <set>
      <if test="username != null">
        username = #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="name != null">
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="jobnum != null">
        jobNum = #{jobnum,jdbcType=VARCHAR},
      </if>
      <if test="department != null">
        department = #{department,jdbcType=VARCHAR},
      </if>
      <if test="team != null">
        team = #{team,jdbcType=VARCHAR},
      </if>
      <if test="role != null">
        role = #{role,jdbcType=VARCHAR},
      </if>
      <if test="product != null">
        product = #{product,jdbcType=VARCHAR},
      </if>
      <if test="createtime != null">
        createTime = #{createtime,jdbcType=TIMESTAMP},
      </if>
      <if test="logintime != null">
        loginTime = #{logintime,jdbcType=TIMESTAMP},
      </if>
      <if test="note1 != null">
        note1 = #{note1,jdbcType=VARCHAR},
      </if>
      <if test="note2 != null">
        note2 = #{note2,jdbcType=VARCHAR},
      </if>
    </set>
    where userId = #{userid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dong.beta.dao.domain.Users">
    update users
    set username = #{username,jdbcType=VARCHAR},
      password = #{password,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      jobNum = #{jobnum,jdbcType=VARCHAR},
      department = #{department,jdbcType=VARCHAR},
      team = #{team,jdbcType=VARCHAR},
      role = #{role,jdbcType=VARCHAR},
      product = #{product,jdbcType=VARCHAR},
      createTime = #{createtime,jdbcType=TIMESTAMP},
      loginTime = #{logintime,jdbcType=TIMESTAMP},
      note1 = #{note1,jdbcType=VARCHAR},
      note2 = #{note2,jdbcType=VARCHAR}
    where userId = #{userid,jdbcType=INTEGER}
  </update>
</mapper>